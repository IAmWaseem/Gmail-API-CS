/*
 * GmailAPI.PCL
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 01/27/2017
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using GmailAPI.PCL;
using GmailAPI.PCL.Utilities;

namespace GmailAPI.PCL.Models
{
    public class WatchRequest : INotifyPropertyChanged 
    {
        // These fields hold the values for the public properties.
        private LabelFilterActionEnum? labelFilterAction;
        private List<string> labelIds;
        private string topicName;

        /// <summary>
        /// Filtering behavior of labelIds list specified.
        /// </summary>
        [JsonProperty("labelFilterAction", ItemConverterType = typeof(StringValuedEnumConverter))]
        public LabelFilterActionEnum? LabelFilterAction 
        { 
            get 
            {
                return this.labelFilterAction; 
            } 
            set 
            {
                this.labelFilterAction = value;
                onPropertyChanged("LabelFilterAction");
            }
        }

        /// <summary>
        /// List of label_ids to restrict notifications about. By default, if unspecified, all changes are pushed out. If specified then dictates which labels are required for a push notification to be generated.
        /// </summary>
        [JsonProperty("labelIds")]
        public List<string> LabelIds 
        { 
            get 
            {
                return this.labelIds; 
            } 
            set 
            {
                this.labelIds = value;
                onPropertyChanged("LabelIds");
            }
        }

        /// <summary>
        /// A fully qualified Google Cloud Pub/Sub API topic name to publish the events to. This topic name **must** already exist in Cloud Pub/Sub and you **must** have already granted gmail "publish" permission on it. For example, "projects/my-project-identifier/topics/my-topic-name" (using the Cloud Pub/Sub "v1" topic naming format).
        /// Note that the "my-project-identifier" portion must exactly match your Google developer project id (the one executing this watch request).
        /// </summary>
        [JsonProperty("topicName")]
        public string TopicName 
        { 
            get 
            {
                return this.topicName; 
            } 
            set 
            {
                this.topicName = value;
                onPropertyChanged("TopicName");
            }
        }

        /// <summary>
        /// Property changed event for observer pattern
        /// </summary>
        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// Raises event when a property is changed
        /// </summary>
        /// <param name="propertyName">Name of the changed property</param>
        protected void onPropertyChanged(String propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
} 